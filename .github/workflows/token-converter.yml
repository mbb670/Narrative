name: Token Converter

on:
  workflow_dispatch: {}
  push:
    paths:
      - 'tokens/raw/**/*.json'
      - 'tokens/style-dictionary/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/token-converter.yml'

permissions:
  contents: write

concurrency:
  group: token-converter
  cancel-in-progress: true

jobs:
  build:
    # Belt & suspenders: don't re-run on our own bot commits even if triggers expand later
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Intentionally not enabling automatic npm cache here to avoid lockfile warnings

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      - name: Ensure output dir exists
        run: mkdir -p tokens/resolved

      - name: Build tokens â†’ CSS/JSON
        env:
          CI: true
        run: npm run build:tokens

      - name: Verify outputs exist (CSS + zeroheight.json)
        run: |
          # At least one non-empty CSS file
          COUNT_CSS=$(find tokens/resolved -maxdepth 1 -type f -name '*.css' -size +0c | wc -l | tr -d ' ')
          if [ "$COUNT_CSS" -eq 0 ]; then
            echo "No non-empty CSS outputs found in tokens/resolved/"
            ls -la tokens/resolved || true
            exit 1
          fi

          # zeroheight.json exists and is valid JSON
          if [ ! -s tokens/resolved/zeroheight.json ]; then
            echo "zeroheight.json missing or empty at tokens/resolved/zeroheight.json"
            exit 1
          fi
          node -e "JSON.parse(require('fs').readFileSync('tokens/resolved/zeroheight.json','utf8'))"

          # Optional sanity: ensure there's at least one $value token
          node -e "const o=JSON.parse(require('fs').readFileSync('tokens/resolved/zeroheight.json','utf8'));function c(x){let n=0;for(const k in x){if(k.startsWith('$'))continue;const v=x[k];if(v&&typeof v==='object'){if('$value'in v)n++;n+=c(v)}}return n}if(c(o)===0){console.error('zeroheight.json has no $value tokens');process.exit(1)}"

      - name: Show outputs (for debugging)
        run: |
          echo "Built files:"
          ls -la tokens/resolved || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tokens-outputs
          path: |
            tokens/resolved/*.css
            tokens/resolved/zeroheight.json
          retention-days: 7

      - name: Commit & push if changed (any files under tokens/resolved/)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Stage all adds/updates/deletions in tokens/resolved
          git add -A tokens/resolved

          # Commit only if there are staged changes
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            FILES="$(git diff --cached --name-only | tr '\n' ' ')"
            git commit -m "chore(tokens): rebuild ${FILES} from ${GITHUB_SHA::7} [skip ci]"
            git push
          fi
